{"version":3,"sources":["app/api.ts","components/UserProvider.tsx","components/CartProvider.tsx","app/NavBar.tsx","components/loading.tsx","components/StoreList.tsx","components/StoreForm.tsx","components/LoginForm.tsx","components/HomePage.tsx","components/RegisterForm.tsx","components/ProductList.tsx","components/FamilySelect.tsx","components/ProductForm.tsx","components/UserForm.tsx","components/CartList.tsx","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["axios","defaults","baseURL","process","REACT_APP_API_URL","interceptors","request","use","config","token","window","localStorage","getItem","headers","Authorization","responseBody","response","status","data","responseListBody","requests","url","get","then","body","post","put","delete","api","Stores","list","details","id","create","store","update","Id","Sales","sale","SaleId","SalesDetails","salesDetail","SalesDetailId","Products","product","ProductId","Families","family","FamilyId","Users","current","user","Roles","role","addrole","Account","login","register","logout","userContextDefault","setUser","userRoles","setUserRoles","roles","setRoles","userToken","setToken","getCurrentUser","UserContext","createContext","UserProvider","children","useState","setUserToken","useEffect","catch","err","console","log","map","r","find","x","undefined","some","Provider","value","setItem","saleContextDefault","userSales","activeSale","setActiveSale","userSalesDetails","setUserSalesDetails","activeSalesDetails","setActiveSalesDetails","products","setProducts","families","cartProducts","fillUserSales","fillCartProducts","fillUserSalesDetails","fillActiveSalesDetails","CartContext","CartProvider","userCtx","React","useContext","sales","setSales","salesDetails","setSalesDetails","setUserSales","setFamilies","setcartProducts","newSale","SaleDocNum","Store","POSNum","POSUser","Paid","uSales","length","s","unpaidSale","activeUserSale","createSale","saleDetail","d","SaleID","Product","p","ProductName","detail","sd","NavBar","cartCtx","activeItem","setActiveItem","handleClick","event","target","name","Menu","pointing","secondary","Container","Item","as","NavLink","to","exact","header","active","onClick","Icon","size","color","Header","Name","position","disabled","UserName","style","marginLeft","Loading","inverted","content","Dimmer","Loader","StoreList","setTarget","stores","setStores","submiting","setSubmiting","Card","Group","Content","StoreName","Meta","StoreAddress","Description","Active","extra","className","Button","Link","loading","e","currentTarget","filter","handleDeleteStore","Divider","horizontal","centered","positive","StoreForm","history","useHistory","useParams","Pos","Stocks","setStore","handleInputChange","Grid","columns","Column","Form","onSubmit","push","editStore","Input","required","placeholder","onChange","Checkbox","label","checked","type","LoginForm","Email","Password","error","setError","a","appUser","Token","Message","toString","HomePage","block","RegisterForm","ProductList","setSelectedProduct","newSalesDetail","Seq","Quantity","UnitPrice","LineTotal","handleAddToCart","tempSalesDetail","addSalesDetail","Barcode","QuantityPerUnit","UnitMeasure","Discontinued","floated","width","Label","f","FamilyName","handleDeleteProduct","FamilySelect","currentFamily","setCurrentFamily","familyToAdd","setFamilyToAdd","Field","control","Segment","ProductForm","setProduct","editProduct","UserForm","PhoneNumber","Address","City","Photos","newRole","setRole","addRole","roleFromEvent","removeRole","editUser","Row","CartList","totalProducts","setTotalProducts","totalPrice","setTotalPrice","addProduct","updateSalesDetail","removeProduct","price","fluid","negative","App","setLoading","removeItem","marginTop","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.05412871.chunk.js","sourcesContent":["import axios, { AxiosResponse } from 'axios';\r\nimport { Family } from '../models/family';\r\nimport { Product } from '../models/product';\r\nimport { Sale } from '../models/sale';\r\nimport { SalesDetail } from '../models/salesdetail';\r\nimport { Store } from '../models/store';\r\nimport { Role, RoleDto, User, UserDto } from '../models/user';\r\n\r\nconst sleep=(delay: number)=>{\r\n    return new Promise((resolve)=>{\r\n        setTimeout(resolve, delay)\r\n    })\r\n}\r\n\r\naxios.defaults.baseURL=process.env.REACT_APP_API_URL;\r\n//axios.defaults.baseURL=\"/api\"\r\naxios.interceptors.request.use(config => {\r\n    const token = window.localStorage.getItem('jwt');\r\n    if(token) config.headers.Authorization = `Bearer ${token}`;\r\n    return config;\r\n})\r\n// axios.interceptors.response.use(async response=>{\r\n//     try {\r\n//         await sleep(1000);\r\n//         return response;\r\n//     } catch (error) {\r\n//         console.log(error);\r\n//         return await Promise.reject(error);\r\n//     }\r\n// })\r\nconst responseBody=<T>(response: AxiosResponse<T>)=>{if(response.status < 300) {return response.data} else {return null}};\r\nconst responseListBody=<T>(response: AxiosResponse<T>)=>{if(response.status < 300) {return response.data} else {return []}};\r\nconst requests={\r\n    get: <T> (url: string)=> axios.get<T>(url).then(responseBody),\r\n    getList: <T> (url: string)=> axios.get<T>(url).then(responseListBody),\r\n    post: <T> (url: string, body: {})=> axios.post<T>(url, body).then(responseBody),\r\n    put: <T> (url: string, body: {})=> axios.put<T>(url, body).then(responseBody),\r\n    del: <T> (url: string)=> axios.delete<T>(url).then(responseBody),\r\n}\r\nconst Stores={\r\n    list: ()=>requests.getList<Store[]>('/store'),\r\n    details: (id: string)=>requests.get<Store>(`/store/${id}`),\r\n    create: (store: Store)=>requests.post<Store>('/store', store),\r\n    update: (store: Store)=>requests.put<Store>(`/store/${store.Id}`, store),\r\n    delete: (id: string)=>requests.del<Store>(`/store/${id}`)\r\n}\r\nconst Sales={\r\n    list: ()=>requests.getList<Sale[]>('/sale'),\r\n    details: (id: string)=>requests.get<Sale>(`/sale/${id}`),\r\n    create: (sale: Sale)=>requests.post<Sale>('/sale', sale),\r\n    update: (sale: Sale)=>requests.put<Sale>(`/sale/${sale.SaleId}`, sale),\r\n    delete: (id: string)=>requests.del<Sale>(`/sale/${id}`)\r\n}\r\nconst SalesDetails={\r\n    list: ()=>requests.getList<SalesDetail[]>('/salesdetail'),\r\n    details: (id: string)=>requests.get<SalesDetail>(`/salesdetail/${id}`),\r\n    create: (salesDetail: SalesDetail)=>requests.post<SalesDetail>('/salesdetail', salesDetail),\r\n    update: (salesDetail: SalesDetail)=>requests.put<SalesDetail>(`/salesdetail/${salesDetail.SalesDetailId}`, salesDetail),\r\n    delete: (id: string)=>requests.del<SalesDetail>(`/salesdetail/${id}`)\r\n}\r\nconst Products={\r\n    list: ()=>requests.getList<Product[]>('/product'),\r\n    details: (id: string)=>requests.get<Product>(`/product/${id}`),\r\n    create: (product: Product)=>requests.post<Product>('/product', product),\r\n    update: (product: Product)=>requests.put<Product>(`/product/${product.ProductId}`, product),\r\n    delete: (id: string)=>requests.del<Product>(`/product/${id}`)\r\n}\r\nconst Families={\r\n    list: ()=>requests.getList<Family[]>('/family'),\r\n    details: (id: string)=>requests.get<Family>(`/family/${id}`),\r\n    create: (family: Family)=>requests.post<Family>('/family', family),\r\n    update: (family: Family)=>requests.put<Family>(`/family/${family.FamilyId}`, family),\r\n    delete: (id: string)=>requests.del<Family>(`/family/${id}`)\r\n}\r\nconst Users={\r\n    //list: ()=>requests.getList<User[]>('/user'),\r\n    current: ()=>requests.get<User>('/user'),\r\n    details: (id: string)=>requests.get<User>(`/user/${id}`),\r\n    create: (user: User)=>requests.post<User>('/user', user),\r\n    update: (user: User)=>requests.put<User>(`/user/${user.Id}`, user),\r\n    delete: (id: string)=>requests.del<User>(`/user/${id}`)\r\n}\r\nconst Roles={\r\n    list: ()=>requests.getList<Role[]>('/user/role'),\r\n    details: (id: string)=>requests.get<Role>(`/user/role/${id}`),\r\n    create: (role: RoleDto)=>requests.post<Role>('/user/role', role),\r\n    addrole: (id: string, role: Role)=>requests.post<User>(`/user/role/${id}`, role),\r\n    delete: (id: string)=>requests.del<Role>(`/user/role/${id}`)\r\n}\r\nconst Account={\r\n    current: ()=>requests.get<User>('/account'),\r\n    login: (user: UserDto)=>requests.post<User>('/login', user),\r\n    register: (user: UserDto)=>requests.post<User>('/register', user),\r\n    logout: ()=>requests.get('/logout')\r\n}\r\nconst api={\r\n    Stores,\r\n    Sales,\r\n    SalesDetails,\r\n    Products,\r\n    Families,\r\n    Users,\r\n    Roles,\r\n    Account\r\n}\r\nexport default api;","import React, { createContext, useEffect, useState } from \"react\";\r\nimport { setTokenSourceMapRange } from \"typescript\";\r\nimport api from \"../app/api\";\r\nimport { Role, User, UserContextType } from \"../models/user\";\r\n\r\nconst userContextDefault: UserContextType = {\r\n    user: null,\r\n    setUser: null,\r\n    userRoles: [],\r\n    setUserRoles: null,\r\n    roles: [],\r\n    setRoles: null,\r\n    userToken: null,\r\n    setToken: null,\r\n    getCurrentUser: null\r\n}\r\n\r\nexport const UserContext=createContext<UserContextType>(userContextDefault);\r\n\r\ninterface Props{\r\n    children: React.ReactNode;\r\n}\r\n\r\nexport default function UserProvider({children}: Props){\r\n    const [user, setUser] = useState<User|null>(null);\r\n    const [roles, setRoles]=useState<Role[]>([]);\r\n    const [userRoles, setUserRoles] = useState<Role[]>([]);\r\n    const [userToken, setUserToken] = useState<string|null>(window.localStorage.getItem('jwt'))\r\n    useEffect(()=>{\r\n        api.Roles.list().then(response => {\r\n            if(response!==null) setRoles(response);\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n        });\r\n    }, [])\r\n    useEffect(()=>{\r\n        setUserRoles([]);\r\n        user?.Roles.map(r=>{\r\n            const role = roles.find(x=>x.Id === r);\r\n            if(role !== undefined && !userRoles.some(x=>x.Id === r)) {\r\n                setUserRoles([...userRoles, role]);\r\n            }\r\n        });\r\n    }, [user, roles])\r\n    // It's just a test:\r\n    // useEffect(() => {\r\n        //  fetch('https://localhost:49153/api/account',\r\n        // {method: 'GET',\r\n        // cache: 'no-cache',\r\n        // headers: {\r\n        //     'Content-Type': 'application/json'\r\n        // }\r\n        // })\r\n        // .then((response) => {\r\n        //     console.log(response);\r\n        //     let resp = JSON.stringify(response);\r\n        //     return JSON.parse(resp);\r\n        //     // return response.json();\r\n        // })\r\n        // .then((data) => {\r\n        //     console.log(data);\r\n        //     setUser(data);\r\n        // })\r\n    //     getCurrentUser();\r\n    //   }, [user])\r\n\r\n    // async function getCurrentUser(){\r\n    //     await api.Account.current()\r\n    //     .then(response => {\r\n    //         console.log(response);\r\n    //         setUser(response);\r\n    //     })\r\n    //     .catch((err)=>{\r\n    //         console.log(err);\r\n    //     });\r\n    // }\r\n\r\n    function getCurrentUser(){\r\n        if(userToken !== null){\r\n            console.log('Trying to get user ...');    \r\n            api.Users.current()\r\n                .then(response => {\r\n                    console.log(response);\r\n                    setUser(response);\r\n                })\r\n                .catch((err)=>{\r\n                    console.log(err);\r\n                });\r\n            }\r\n        }\r\n\r\n    function setToken(token: string){\r\n        if(token) {\r\n            window.localStorage.setItem('jwt', token);\r\n            setUserToken(token);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <UserContext.Provider value={{user, setUser, userRoles, setUserRoles, roles, setRoles, userToken, setToken, getCurrentUser}}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    );\r\n}","import React, { createContext, useEffect, useState } from \"react\";\r\nimport api from \"../app/api\";\r\nimport { Family } from \"../models/family\";\r\nimport { Product } from \"../models/product\";\r\nimport { Sale, SaleContext } from \"../models/sale\";\r\nimport { SalesDetail } from \"../models/salesdetail\";\r\nimport { UserContext } from \"./UserProvider\";\r\n\r\nconst saleContextDefault: SaleContext = {\r\n    userSales: [],\r\n    activeSale: null,\r\n    setActiveSale: null,\r\n    userSalesDetails: [],\r\n    setUserSalesDetails: null,\r\n    activeSalesDetails: [],\r\n    setActiveSalesDetails: null,\r\n    products: [],\r\n    setProducts: null,\r\n    families: [],\r\n    cartProducts: [],\r\n    fillUserSales: null,\r\n    fillCartProducts: null,\r\n    fillUserSalesDetails: null,\r\n    fillActiveSalesDetails: null\r\n}\r\n\r\nexport const CartContext=createContext<SaleContext>(saleContextDefault);\r\n\r\ninterface Props{\r\n    children: React.ReactNode;\r\n}\r\n\r\nexport default function CartProvider({children}: Props){\r\n    const userCtx=React.useContext(UserContext);\r\n    const [sales, setSales] = useState<Sale[]|null>(null);\r\n    const [salesDetails, setSalesDetails] = useState<SalesDetail[]|null>(null);\r\n    const [userSales, setUserSales] = useState<Sale[]>([]);\r\n    const [products, setProducts]=useState<Product[]>([]);\r\n    const [families, setFamilies]=useState<Family[]>([]);\r\n    const [cartProducts, setcartProducts]=useState<Product[]>([]);\r\n    const newSale={\r\n        SaleId: '',\r\n        SaleDocNum: '',\r\n        Store: '',\r\n        POSNum: '',\r\n        POSUser: userCtx.user ? userCtx.user.Id : '',\r\n        Paid: false,\r\n        SalesDetails: [],\r\n    }\r\n    const [activeSale, setActiveSale] = useState<Sale>(newSale);\r\n    const [userSalesDetails, setUserSalesDetails]=useState<SalesDetail[]>([]);\r\n    const [activeSalesDetails, setActiveSalesDetails]=useState<SalesDetail[]>([]);\r\n\r\n    useEffect(() => {\r\n        fillSales();\r\n        fillSalesDetails();\r\n        fillProducts();\r\n        fillFamilies();\r\n        }, []);\r\n\r\n    useEffect(()=>{\r\n        fillUserSales();\r\n    }, [userCtx.user])\r\n\r\n    useEffect(()=>{\r\n        fillUserSalesDetails();\r\n        fillActiveSalesDetails();\r\n        fillCartProducts();\r\n    }, [activeSale, setActiveSale])\r\n\r\n    function fillSales(){\r\n        api.Sales.list().then(response => {\r\n            setSales(response);\r\n          })\r\n          .catch((err)=>{\r\n              console.log(err);\r\n          });\r\n    }\r\n\r\n    function fillSalesDetails(){     \r\n        api.SalesDetails.list().then(response => {\r\n            setSalesDetails(response);\r\n          })\r\n          .catch((err)=>{\r\n              console.log(err);\r\n          });\r\n    }\r\n\r\n    function fillProducts(){\r\n        api.Products.list().then(response => {\r\n            setProducts(response);\r\n          }).catch((err)=>{\r\n              console.log(err);\r\n          });\r\n    }\r\n\r\n    function fillFamilies(){\r\n        api.Families.list().then(response => {\r\n            setFamilies(response);\r\n          }).catch((err)=>{\r\n              console.log(err);\r\n          });\r\n    }\r\n\r\n    function fillUserSales(){\r\n        const uSales = userCtx.user?.Sales;\r\n        if(userCtx.user!==null && uSales !== undefined){\r\n            setUserSales(uSales);\r\n            console.log('user sales updated');\r\n            if(uSales.length>0 && uSales.some((s)=>s.Paid===false)){\r\n                const unpaidSale = uSales.find((s)=>s.Paid===false);\r\n                const activeUserSale = sales?.find(s=>s.SaleId === unpaidSale?.SaleId)\r\n                if(activeUserSale!==undefined){\r\n                    setActiveSale(activeUserSale);\r\n                    console.log('active sale updated');\r\n                }\r\n            } else{\r\n                if(userCtx.user!==null){\r\n                    createSale(newSale);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function fillUserSalesDetails(){\r\n        if(userSales.length >0){\r\n            console.log('userSale count '+ userSales.length);\r\n            if(userSalesDetails.length > 0){\r\n                setUserSalesDetails([]);\r\n            }\r\n            userSales.map(s=>{\r\n                const saleDetail = salesDetails?.find(d=>d.SaleID === s.SaleId);\r\n                console.log('Product found in User order: ' + saleDetail?.Product);\r\n                if(saleDetail !== undefined){\r\n                    setUserSalesDetails([...userSalesDetails, saleDetail]);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    function fillCartProducts(){\r\n        if(activeSale?.SalesDetails !== []){\r\n            if(cartProducts.length > 0){\r\n                setcartProducts([]);\r\n            }\r\n            activeSale?.SalesDetails.map(d=>{\r\n                const product = products.find(p=>p.ProductId === d.Product);\r\n                console.log('Product in Cart:' + product?.ProductName)\r\n                if(product !== undefined && !cartProducts.some(p=>p.ProductId === product.ProductId)){\r\n                    setcartProducts([...cartProducts, product]);\r\n                    console.log('cart products updated');\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    function fillActiveSalesDetails(){\r\n        if(activeSale.SalesDetails.length >0){\r\n            if(activeSalesDetails.length > 0){\r\n                setActiveSalesDetails([]);\r\n            }\r\n            activeSale.SalesDetails.map(d => {\r\n                const detail = salesDetails?.find(sd => sd.SalesDetailId === d.SalesDetailId);\r\n                if(detail !== undefined){\r\n                    setActiveSalesDetails([...activeSalesDetails, detail]);\r\n                    console.log(`active cart product details with id: ${detail.Product} updated`);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    function createSale(sale: Sale){\r\n        try{\r\n            api.Sales.create(sale)\r\n            .then((response)=>{\r\n                if(response!==null){\r\n                    setActiveSale(response);\r\n                }\r\n            });\r\n        } catch (err: any){\r\n            console.log(err);\r\n        }  \r\n    }\r\n\r\n    return(\r\n        <CartContext.Provider value={{\r\n            userSales, activeSale, setActiveSale, \r\n            userSalesDetails, setUserSalesDetails,\r\n            activeSalesDetails, setActiveSalesDetails, \r\n            products, setProducts, \r\n            families, cartProducts, \r\n            fillUserSales, fillCartProducts,\r\n            fillUserSalesDetails,\r\n            fillActiveSalesDetails}}>\r\n            {children}\r\n        </CartContext.Provider>\r\n    );\r\n}","import React, {MouseEvent, useState } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Button, Container, Header, Icon, Menu } from \"semantic-ui-react\";\r\nimport { CartContext } from \"../components/CartProvider\";\r\nimport { UserContext } from \"../components/UserProvider\";\r\n\r\ninterface Props{\r\n    logout: ()=>void;\r\n}\r\n\r\nexport default function NavBar({logout}: Props){\r\n    const userCtx=React.useContext(UserContext);\r\n    const cartCtx=React.useContext(CartContext);\r\n    const [activeItem, setActiveItem] = useState<string>('home');\r\n\r\n    function handleClick(event: MouseEvent){\r\n        console.log(event);\r\n        const target=event.target as HTMLAnchorElement;\r\n        setActiveItem(target.name);\r\n    }\r\n    return(\r\n        <Menu pointing secondary>\r\n            <Container>\r\n                <Menu.Item as={NavLink} to='/' exact header name='home'\r\n                    active={activeItem === 'home'} onClick={handleClick}>\r\n                    <Icon name='sun' size='big' color='orange'/>\r\n                    {/* <img src=\"/assets/logo.png\" alt=\"logo\" style={{marginRight:\"10px\"}}/> */}\r\n                    <Header as='h3' color='orange'>Garden Shop</Header>\r\n                </Menu.Item>\r\n                {userCtx.userRoles.some((r)=>r.Name === \"admin\")?\r\n                <Menu.Item as={NavLink} to='/store' name='stores' \r\n                    active={activeItem === 'stores'} onClick={handleClick}/>:\r\n                <></>}\r\n                <Menu.Item as={NavLink} to='/product' name='products' \r\n                    active={activeItem === 'products'} onClick={handleClick}/>\r\n                <Menu.Menu position='right'>\r\n                    <Menu.Item as={NavLink} to={`/cartlist/${cartCtx.activeSale?.SaleId}`} name='cartlist' onClick={handleClick}>\r\n                        <Icon disabled={userCtx.user === null} name='cart' size='large' onClick={handleClick}/>\r\n                    </Menu.Item>\r\n                    {(userCtx.user !== null)?\r\n                    <>\r\n                    <Menu.Item as={NavLink} to={`/edituser/${userCtx.user.Id}`} name='setting' onClick={handleClick}>\r\n                    {userCtx.user.UserName}\r\n                    <Icon name='setting' size='large' style={{marginLeft:\"10px\"}} />\r\n                    </Menu.Item>\r\n                    <Menu.Item\r\n                        name='logout'\r\n                        active={activeItem === 'logout'}\r\n                        onClick={logout}\r\n                        />\r\n                    </>: <>\r\n                    <Menu.Item as={NavLink} to='/login'\r\n                        name='login'\r\n                        active={activeItem === 'login'} onClick={handleClick}/>\r\n                    <Menu.Item as={NavLink} to='/register'\r\n                        name='register'\r\n                        active={activeItem === 'register'} onClick={handleClick}/>\r\n                        </>} \r\n                </Menu.Menu>\r\n            </Container>\r\n        </Menu>\r\n    )\r\n}","import React from 'react';\r\nimport { Dimmer, Loader } from 'semantic-ui-react';\r\n\r\ninterface Props{\r\n    inverted?: boolean;\r\n    content?: string;\r\n}\r\n\r\nexport default function Loading({inverted=true, content='Loading...'}: Props){\r\n    return(\r\n        <Dimmer active={true} inverted={inverted}>\r\n            <Loader content={content}/>\r\n        </Dimmer>\r\n    )\r\n}","import React, { SyntheticEvent, useEffect, useState } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Button, Card, Divider, Header, Icon, Image } from \"semantic-ui-react\";\r\nimport api from \"../app/api\";\r\nimport { Store } from \"../models/store\";\r\nimport { UserContext } from \"./UserProvider\";\r\n\r\nexport default function StoreList() {\r\n    const userCtx=React.useContext(UserContext);\r\n    const [target, setTarget] = useState('');\r\n    const [stores, setStores]=useState<Store[]>([]);\r\n    const [selectedStore, setSelectedStore]=useState<Store|undefined>(undefined);\r\n    const [submiting, setSubmiting]=useState(false);\r\n    useEffect(() => {\r\n        api.Stores.list().then(response => {\r\n          console.log(response);\r\n          setStores(response);\r\n        })\r\n      }, [])\r\n    function handleDeleteStore(e: SyntheticEvent<HTMLButtonElement>, id:string){\r\n        setTarget(e.currentTarget.name);\r\n        setSubmiting(true);\r\n        api.Stores.delete(id).then(()=>{\r\n        setStores([...stores.filter(s=>s.Id !== id)]);\r\n        setSubmiting(false);\r\n        });\r\n    }\r\n      \r\n    return(\r\n        <>\r\n            <Header as='h1'>Our stores</Header>\r\n            <Card.Group>\r\n                {stores.map(store => (\r\n                    <Card key={store.Id}>\r\n                    <Card.Content>\r\n                        {/* <Image\r\n                        floated='right'\r\n                        size='mini'\r\n                        src='https://react.semantic-ui.com/images/avatar/large/steve.jpg'\r\n                        /> */}\r\n                        <Card.Header>{store.StoreName}</Card.Header>\r\n                        <Card.Meta>{store.StoreAddress}</Card.Meta>\r\n                        <Card.Description>\r\n                        The store is <strong>{store.Active ? \"Active\" : \"Inactive\" }</strong>\r\n                        </Card.Description>\r\n                    </Card.Content>\r\n                    <Card.Content extra>\r\n                        <div className='ui three buttons'>\r\n                        <Button color='yellow'>\r\n                            View Stock\r\n                        </Button>\r\n                        <Button as={Link} to={`/editstore/${store.Id}`} color='green'>\r\n                            Edit\r\n                        </Button>\r\n                        <Button name={store.Id} loading={submiting && target === store.Id} onClick={(e)=>handleDeleteStore(e,store.Id)} color='orange'>\r\n                            Delete\r\n                        </Button>\r\n                        </div>\r\n                    </Card.Content>\r\n                    </Card>\r\n                ))}\r\n            </Card.Group>\r\n            {userCtx.userRoles.some((r)=>r.Name === \"admin\")?\r\n            <>\r\n            <Divider horizontal>\r\n                <Header as='h4'>\r\n                    <Icon name='edit outline' />\r\n                    New Store\r\n                </Header>\r\n            </Divider>\r\n            <Card.Group centered>\r\n                <Button as={NavLink} to='/newstore' positive content='Create Store'/>\r\n            </Card.Group>\r\n            </>:<></>\r\n            }\r\n        </>\r\n)}","import React, { ChangeEvent, useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { Button, Form, Grid, Header } from \"semantic-ui-react\";\r\nimport api from \"../app/api\";\r\nimport { Store } from \"../models/store\";\r\n\r\nexport default function StoreForm(){\r\n    const history = useHistory();\r\n    const {id} = useParams<{id: string}>();\r\n    const initialState={\r\n        Id: '',\r\n        StoreName: '',\r\n        StoreAddress: '',\r\n        Active: false,\r\n        Pos: [],\r\n        Stocks: [],\r\n    }\r\n    const [store, setStore]=useState<Store>(initialState);\r\n    const [submiting, setSubmiting]=useState(false);\r\n    useEffect(()=>{\r\n        if(id){\r\n            api.Stores.details(id).then(response => {\r\n                if(response!==null) setStore(response);\r\n            }).catch((err)=>{\r\n                console.log(err);\r\n            });\r\n        };\r\n    }, [id])\r\n\r\n    function handleSubmit(){\r\n        editStore(store);\r\n    }\r\n    function handleInputChange(event: ChangeEvent<HTMLInputElement>){\r\n        const {name, value}=event.target;\r\n        setStore({...store, [name]: value})\r\n    }\r\n    function toggleActive(){\r\n        setStore({...store, Active: !store.Active})\r\n    }\r\n    function editStore(store: Store){\r\n        setSubmiting(true);\r\n        if (store.Id){\r\n          api.Stores.update(store).then(()=>{\r\n            history.push('/store');\r\n          })\r\n        } else {\r\n          api.Stores.create(store).then(()=>{\r\n            history.push('/store');\r\n          })\r\n        }\r\n        setStore(store);\r\n        setSubmiting(false);   \r\n    }\r\n    function closeForm(){\r\n        history.push('/store');\r\n    }\r\n    return(\r\n        <>\r\n            <Grid centered columns={2}>\r\n                <Grid.Column>\r\n                    <Header as='h2'>New store</Header>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Input required placeholder='Store Name' value={store.StoreName || ''} name='StoreName' onChange={handleInputChange}/>\r\n                        <Form.Input required placeholder='Store Address' value={store.StoreAddress || ''} name='StoreAddress' onChange={handleInputChange}/>\r\n                        <Form.Checkbox label='Active' checked={store.Active || false} name='Active' onChange={toggleActive}/>\r\n                        <Button loading={submiting} positive type='submit'>Submit</Button>\r\n                        <Button onClick={closeForm} type='button'>Cancel</Button>\r\n                    </Form>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import axios from \"axios\";\r\nimport React, { ChangeEvent, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Button, Form, Grid, Header, Message } from \"semantic-ui-react\";\r\nimport api from \"../app/api\";\r\nimport { UserDto } from \"../models/user\";\r\nimport { UserContext } from \"./UserProvider\";\r\n\r\nexport default function LoginForm(){\r\n    const userCtx=React.useContext(UserContext);\r\n    const history = useHistory();\r\n    const initialState= {\r\n        UserName: '',\r\n        Email: '',\r\n        Password: ''\r\n    }\r\n    const [user, setUser]=useState(initialState);\r\n    const [submiting, setSubmiting]=useState(false);\r\n    const [error, setError]=useState(\"\");\r\n    function handleInputChange(event: ChangeEvent<HTMLInputElement>){\r\n        const {name, value}=event.target;\r\n        setUser({...user, [name]: value})\r\n    }\r\n    function handleSubmit(){\r\n        setSubmiting(true);\r\n        login(user);\r\n    }\r\n\r\n    async function login(user: UserDto){\r\n        try{\r\n        const appUser = await api.Account.login(user);\r\n          console.log(appUser);\r\n          userCtx.setUser(appUser);\r\n          userCtx.setToken(appUser?.Token);\r\n          setSubmiting(false);\r\n          history.push('/');\r\n        } catch(err: any){\r\n            console.log(err);\r\n            setError(err);\r\n            setSubmiting(false);\r\n        };\r\n        // It should work, but it doesn't :((\r\n        // try {\r\n        //     const response = await axios.post('https://localhost:49154/api/login', user);\r\n        //     console.log(response);\r\n        //     setSubmiting(false);\r\n        //     history.push('/');\r\n        // } catch (err: any) {\r\n        //     console.error(err);\r\n        //     setError(err);\r\n        //     setSubmiting(false);\r\n        // }\r\n        // It's just a test:\r\n    //     async function myFetch() {\r\n    //         let response = await fetch('https://localhost:49154/api/login', {\r\n    //             method: 'POST',\r\n    //             headers: {\r\n    //               'Content-Type': 'application/json;charset=utf-8'\r\n    //             },\r\n    //             body: JSON.stringify(user)\r\n    //         });\r\n    //         if (!response.ok) {\r\n    //           throw new Error(`HTTP error! status: ${response.status}`);\r\n    //         } else {\r\n    //           return await response.json();\r\n    //         }\r\n    //     }\r\n    //     myFetch().then((result) => {\r\n    //         console.log(result);\r\n    //         setSubmiting(false);\r\n    //         history.push('/');\r\n    //     }).catch(e => {\r\n    //         console.log(e);\r\n    //         setError(e);\r\n    //         setSubmiting(false);\r\n    //     });  \r\n    }\r\n\r\n    function closeForm(){\r\n        history.push('/');\r\n    }\r\n      \r\n    return(\r\n        <>\r\n        <Grid centered columns={2}>\r\n            <Grid.Column>\r\n                <Header as='h2'>Login</Header>\r\n                <Form onSubmit={handleSubmit} error={error?true:false}>\r\n                    <Form.Input required placeholder='User Name' value={user.UserName || ''} name='UserName' onChange={handleInputChange}/>\r\n                    <Form.Input required placeholder='Email' value={user.Email || ''} name='Email' onChange={handleInputChange}/>\r\n                    <Form.Input required type='password' placeholder='Password' value={user.Password || ''} name='Password' onChange={handleInputChange}/>\r\n                    <Button loading={submiting} positive type='submit'>Login</Button>\r\n                    <Button onClick={closeForm} type='button'>Cancel</Button>\r\n                    <Message\r\n                        error\r\n                        content={error.toString()}\r\n                    />\r\n                </Form>\r\n            </Grid.Column>\r\n        </Grid>\r\n        </>\r\n    );\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Header } from \"semantic-ui-react\";\r\nimport { UserContext } from \"./UserProvider\";\r\n\r\nexport default function HomePage(){\r\n    const userCtx=React.useContext(UserContext);\r\n    return(\r\n        <Container>\r\n            <Header as='h2'>Home page</Header>\r\n            \r\n            <Header as='h4' block>\r\n                {(userCtx.user === null)?\r\n                <p>Welcome to my Garden shop!\r\n                Please <Link to='/login'>login</Link> to buy something. </p>\r\n                :\r\n                <p><strong>{userCtx.user.UserName}</strong>, welcome back to my Garden shop!\r\n                Nice to see you again. </p>\r\n                }\r\n            </Header>\r\n        </Container>\r\n    );\r\n}","import React, { ChangeEvent, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Button, Form, Grid, Header, Message } from \"semantic-ui-react\";\r\nimport api from \"../app/api\";\r\nimport { UserDto } from \"../models/user\";\r\nimport { UserContext } from \"./UserProvider\";\r\n\r\nexport default function RegisterForm(){\r\n    const userCtx=React.useContext(UserContext);\r\n    const history = useHistory();\r\n    const initialState= {\r\n        UserName: '',\r\n        Email: '',\r\n        Password: ''\r\n    }\r\n    const [user, setUser]=useState(initialState);\r\n    const [submiting, setSubmiting]=useState(false);\r\n    const [error, setError]=useState(\"\");\r\n    function handleInputChange(event: ChangeEvent<HTMLInputElement>){\r\n        const {name, value}=event.target;\r\n        setUser({...user, [name]: value})\r\n    }\r\n    function handleSubmit(){\r\n        setSubmiting(true);\r\n        register(user);\r\n    }\r\n\r\n    async function register(user: UserDto){\r\n        try {\r\n        const appUser = await api.Account.register(user)\r\n          console.log(appUser);\r\n          userCtx.setUser(appUser);\r\n          userCtx.setToken(appUser?.Token);\r\n          setSubmiting(false);\r\n          history.push('/');\r\n        } catch(err: any){\r\n            console.log(err);\r\n            setError(err.Message);\r\n            setSubmiting(false);\r\n        };\r\n           \r\n      }\r\n\r\n    function closeForm(){\r\n        history.push('/');\r\n    }\r\n      \r\n    return(\r\n        <>\r\n        <Grid centered columns={2}>\r\n            <Grid.Column>\r\n                <Header as='h2'>Register</Header>\r\n                <Form onSubmit={handleSubmit} error={error?true:false}>\r\n                    <Form.Input required placeholder='User Name' value={user.UserName || ''} name='UserName' onChange={handleInputChange}/>\r\n                    <Form.Input required placeholder='Email' value={user.Email || ''} name='Email' onChange={handleInputChange}/>\r\n                    <Form.Input required type='password' placeholder='Password' value={user.Password || ''} name='Password' onChange={handleInputChange}/>\r\n                    <Button loading={submiting} positive type='submit'>Register</Button>\r\n                    <Button onClick={closeForm} type='button'>Cancel</Button>\r\n                    <Message\r\n                        error\r\n                        content={error.toString()}\r\n                    />\r\n                </Form>\r\n            </Grid.Column>\r\n        </Grid>\r\n        </>\r\n    );\r\n}","import React, { SyntheticEvent, useEffect, useState } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Button, Card, Divider, Grid, Header, Icon, Label } from \"semantic-ui-react\";\r\nimport api from \"../app/api\";\r\nimport { Product } from \"../models/product\";\r\nimport { SalesDetail } from \"../models/salesdetail\";\r\nimport { CartContext } from \"./CartProvider\";\r\nimport { UserContext } from \"./UserProvider\";\r\n\r\nexport default function ProductList() {\r\n    const userCtx=React.useContext(UserContext);\r\n    const cartCtx=React.useContext(CartContext);\r\n    const [target, setTarget] = useState('');\r\n    const [selectedProduct, setSelectedProduct]=useState<Product|undefined>(undefined);\r\n    const [submiting, setSubmiting]=useState(false);\r\n    const newSalesDetail={\r\n        SalesDetailId: '',\r\n        SaleID: '',\r\n        Seq: 0,\r\n        Product: '',\r\n        Quantity: 0,\r\n        UnitPrice: 0,\r\n        LineTotal: 0,\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(userCtx.user) {\r\n            cartCtx.fillUserSales();\r\n            cartCtx.fillCartProducts();\r\n            cartCtx.fillUserSalesDetails();\r\n            cartCtx.fillActiveSalesDetails();\r\n          }\r\n    }, [])\r\n\r\n    function handleDeleteProduct(e: SyntheticEvent<HTMLButtonElement>, id:string){\r\n        setTarget(e.currentTarget.name);\r\n        setSubmiting(true);\r\n        api.Products.delete(id).then(()=>{\r\n        cartCtx.setProducts([...cartCtx.products.filter(s=>s.ProductId !== id)]);\r\n        setSubmiting(false);\r\n        });\r\n    }\r\n    function handleAddToCart(e: SyntheticEvent<HTMLButtonElement>, product:Product){\r\n        setTarget(e.currentTarget.name);\r\n        setSubmiting(true);\r\n        setSelectedProduct(product);\r\n        const activeSalesDetails = cartCtx.activeSalesDetails;\r\n        if(activeSalesDetails !==[] \r\n            && activeSalesDetails.some(d=>d.Product === product.ProductId)){\r\n            const tempSalesDetail = activeSalesDetails.find(d=>d.Product === product.ProductId);\r\n            if(tempSalesDetail!==undefined && tempSalesDetail.UnitPrice!==null){\r\n                tempSalesDetail.Quantity+=1;\r\n                tempSalesDetail.LineTotal+=tempSalesDetail.UnitPrice ? tempSalesDetail.UnitPrice : 0;\r\n                updateSalesDetail(tempSalesDetail);\r\n                cartCtx.setActiveSalesDetails([...activeSalesDetails.filter(d => d.SalesDetailId !== tempSalesDetail.SalesDetailId), tempSalesDetail]);\r\n            }\r\n        } else { \r\n            const tempSalesDetail = newSalesDetail; \r\n            tempSalesDetail.SaleID = (cartCtx.activeSale !== null ? cartCtx.activeSale.SaleId : '');\r\n            tempSalesDetail.Product = product.ProductId;\r\n            tempSalesDetail.UnitPrice = product.UnitPrice ? product.UnitPrice : 0;\r\n            tempSalesDetail.Quantity = 1;\r\n            tempSalesDetail.LineTotal = product.UnitPrice ? product.UnitPrice : 0;\r\n            addSalesDetail(tempSalesDetail);\r\n        }\r\n        setSubmiting(false);\r\n    }\r\n    function addSalesDetail(salesDetail: SalesDetail){\r\n        api.SalesDetails.create(salesDetail).then(response => {\r\n            if(response!==null) cartCtx.setActiveSalesDetails([...cartCtx.activeSalesDetails, response]);\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n        });\r\n        return \r\n    }\r\n    function updateSalesDetail(salesDetail: SalesDetail){\r\n        return api.SalesDetails.update(salesDetail)\r\n    }\r\n      \r\n    return(\r\n        <>\r\n            <Header as='h1'>Our products</Header>\r\n            <Card.Group>\r\n                {cartCtx.products.map(product => (\r\n                    <Card key={product.ProductId}>\r\n                    <Card.Content>\r\n                        {/* <Image\r\n                        floated='right'\r\n                        size='mini'\r\n                        src='https://react.semantic-ui.com/images/avatar/large/steve.jpg'\r\n                        /> */}\r\n                        <Card.Header>{product.ProductName}</Card.Header>\r\n                        <Card.Meta>\r\n                            <p>Barcode: {product.Barcode}</p>\r\n                            <p>Price: {product.UnitPrice}&euro; per {product.QuantityPerUnit} {product.UnitMeasure}</p>\r\n                        </Card.Meta>\r\n                        <Card.Description>\r\n                        <p>The product is <strong>{product.Discontinued ? \"discontinued\" : \"available\" }</strong></p>\r\n                            <Grid>\r\n                                <Grid.Column floated='left' width={8}>\r\n                                    <Label>{cartCtx.families.find(f=>f.FamilyId === product.FamilyId)?.FamilyName}</Label>\r\n                                </Grid.Column>\r\n                                <Grid.Column floated='right' width={7}>\r\n                                    {cartCtx.activeSalesDetails.some(d=>d.Product === product.ProductId)?\r\n                                    <Label color='orange'>In cart: {cartCtx.activeSalesDetails.find(d=>d.Product === product.ProductId)?.Quantity} {product.UnitMeasure}</Label>\r\n                                    :<></>\r\n                                    }\r\n                                </Grid.Column>\r\n                            </Grid>\r\n                        </Card.Description>\r\n                    </Card.Content>\r\n                    <Card.Content extra>\r\n                        {userCtx.userRoles.some((r)=>r.Name === \"admin\")?\r\n                            <div className='ui three buttons'>\r\n                            <Button color='yellow'>\r\n                                View Stocks\r\n                            </Button>\r\n                            <Button as={Link} to={`/editproduct/${product.ProductId}`} color='green'>\r\n                                Edit\r\n                            </Button>\r\n                            <Button name={product.ProductId} loading={submiting && target === product.ProductId} onClick={(e)=>handleDeleteProduct(e,product.ProductId)} color='red'>\r\n                                Delete\r\n                            </Button>\r\n                            </div>:\r\n                            <div className='ui two buttons'>\r\n                            <Button color='yellow'>\r\n                                View Stocks\r\n                            </Button>\r\n                            {(userCtx.user != null)?\r\n                            <Button disabled={product.Discontinued} name={product.ProductId} loading={submiting && target === product.ProductId} onClick={(e)=>handleAddToCart(e, product)} color={product.Discontinued?'grey':'green'}>\r\n                                Add to cart\r\n                            </Button>:\r\n                            <Button as={NavLink} to='/login' name='Login' color='green'>\r\n                                Please login\r\n                            </Button>\r\n                            }\r\n                            </div>\r\n                        }\r\n                    </Card.Content>\r\n                    </Card>\r\n                ))}\r\n            </Card.Group>\r\n            {userCtx.userRoles.some((r)=>r.Name === \"admin\")?\r\n            <>\r\n            <Divider horizontal>\r\n                <Header as='h4'>\r\n                    <Icon name='edit outline' />\r\n                    New Product\r\n                </Header>\r\n            </Divider>\r\n            <Card.Group centered>\r\n                <Button as={NavLink} to='/newproduct' positive content='Create Product'/>\r\n            </Card.Group>\r\n            </>:<></>\r\n            }\r\n        </>\r\n)}","import React, { ChangeEvent, useEffect, useState } from \"react\";\r\nimport { Button, Form, Grid, Input, Segment } from \"semantic-ui-react\";\r\nimport api from \"../app/api\";\r\nimport { Family } from \"../models/family\";\r\n\r\ninterface Props{\r\n    currentFamily: Family,\r\n    setCurrentFamily: (family: Family)=>void\r\n}\r\n\r\nexport default function FamilySelect({currentFamily, setCurrentFamily}: Props){\r\n    const [families, setFamilies]=useState<Family[]>([]);\r\n    useEffect(() => {\r\n        api.Families.list().then(response => {\r\n          console.log(response);\r\n          setFamilies(response);\r\n        })\r\n      }, [])\r\n\r\n    useEffect(()=>{\r\n        const family = families.find(f=>f.FamilyName === currentFamily.FamilyName);\r\n        console.log('finded family: '+family);\r\n        if (family !== undefined && family.FamilyId !== currentFamily.FamilyId){\r\n            setCurrentFamily(family);\r\n        } \r\n    }, [families, currentFamily])\r\n\r\n    const [familyToAdd, setFamilyToAdd]=useState<string>('');\r\n\r\n    const [submiting, setSubmiting]=useState(false);\r\n    \r\n    function addFamily(family: string){\r\n        if(families !== [] && families.some(f=>f.FamilyName === family)){\r\n            console.log(`Family ${family} already exist`);\r\n        } else {\r\n            api.Families.create({FamilyId: '', FamilyName: family, Products: []}).then(response => {\r\n                if(response!==null) {\r\n                    setCurrentFamily(response);\r\n                    setFamilies([...families, response]);\r\n                }\r\n            }).catch((err)=>{\r\n                console.log(err);\r\n            });\r\n        }\r\n    }\r\n\r\n    function handleSelectChange(event: ChangeEvent<HTMLSelectElement>){\r\n        const {value}=event.target;\r\n        const family = families.find(f=>f.FamilyName === value);\r\n        console.log(family?.FamilyName + ' Selected');\r\n        if(family !== undefined) {\r\n            setCurrentFamily(family);\r\n        };\r\n    }\r\n\r\n    function handleAddFamily(event: ChangeEvent<HTMLInputElement>){\r\n        const {value}=event.target;\r\n        setFamilyToAdd(value);   \r\n    }\r\n\r\n    function createFamily(){\r\n        setSubmiting(true);\r\n        addFamily(familyToAdd);\r\n        setSubmiting(false);\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <Form.Field label='Family of the product' control='select' value={currentFamily.FamilyName || ''} onChange={handleSelectChange}>\r\n            {families.map(family => (\r\n                <option key={family.FamilyId} value={family.FamilyName}>{family.FamilyName}</option>\r\n            ))}\r\n        </Form.Field>\r\n            <Segment>\r\n                <Input placeholder='Add Family' name='Family' value={familyToAdd || ''} onChange={handleAddFamily}/>\r\n                <Button loading={submiting} onClick={createFamily} type='button'>Create family</Button>\r\n            </Segment>\r\n        </>\r\n    );\r\n}","import React, { ChangeEvent, useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { Button, Form, Grid, Header } from \"semantic-ui-react\";\r\nimport api from \"../app/api\";\r\nimport { Family } from \"../models/family\";\r\nimport { Product } from \"../models/product\";\r\nimport FamilySelect from \"./FamilySelect\";\r\n\r\nexport default function ProductForm(){\r\n    const history = useHistory();\r\n    const {id} = useParams<{id: string}>();\r\n    const initialState={\r\n        ProductId: '',\r\n        Barcode: '',\r\n        ProductName: '',\r\n        FamilyId: '',\r\n        UnitMeasure: 'piece',\r\n        QuantityPerUnit: 1,\r\n        UnitPrice: null,\r\n        Discontinued: false,\r\n        Stocks: []\r\n    }\r\n    const [product, setProduct]=useState<Product>(initialState);\r\n    const defaultFamily = {\r\n        FamilyId: \"\",\r\n        FamilyName: \"unknown\",\r\n        Products: []\r\n    }\r\n    const [currentFamily, setCurrentFamily]=useState<Family>(defaultFamily);\r\n    const [submiting, setSubmiting]=useState(false);\r\n    useEffect(()=>{\r\n        if(id){\r\n            api.Products.details(id).then(response => {\r\n                if(response!==null) setProduct(response);\r\n            }).catch((err)=>{\r\n                console.log(err);\r\n            });\r\n        };\r\n    }, [id])\r\n    useEffect(()=>{\r\n        if(product.FamilyId !== currentFamily.FamilyId && currentFamily.FamilyId !== ''){\r\n            setProduct({...product, FamilyId: currentFamily.FamilyId});\r\n        }\r\n    }, [currentFamily])\r\n\r\n    function handleSubmit(){\r\n        editProduct(product);\r\n    }\r\n    function handleInputChange(event: ChangeEvent<HTMLInputElement>){\r\n        const {name, value}=event.target;\r\n        setProduct({...product, [name]: value});\r\n    }\r\n    function toggleDiscontinued(){\r\n        setProduct({...product, Discontinued: !product.Discontinued});\r\n    }\r\n    function editProduct(product: Product){\r\n        setSubmiting(true);\r\n        if (product.ProductId){\r\n          api.Products.update(product).then(()=>{\r\n            history.push('/product');\r\n          })\r\n        } else {\r\n          api.Products.create(product).then(()=>{\r\n            history.push('/product');\r\n          })\r\n        }\r\n        setProduct(product);\r\n        setSubmiting(false);   \r\n    }\r\n    function closeForm(){\r\n        history.push('/product');\r\n    }\r\n    return(\r\n        <>\r\n            <Grid centered columns={2}>\r\n                <Grid.Column>\r\n                    <Header as='h2'>{id?'Edit':'New'} product</Header>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Input required placeholder='Product Name' value={product.ProductName || ''} name='ProductName' onChange={handleInputChange}/>\r\n                        <Form.Input placeholder='Barcode' value={product.Barcode || ''} name='Barcode' onChange={handleInputChange}/>\r\n                        <Form.Input placeholder='Product Price' value={product.UnitPrice || ''} name='UnitPrice' onChange={handleInputChange}/>\r\n                        <Form.Input placeholder='Unit Measure' value={product.UnitMeasure || ''} name='UnitMeasure' onChange={handleInputChange}/>\r\n                        <Form.Input placeholder='Quantity per Unit' value={product.QuantityPerUnit || ''} name='QuantityPerUnit' onChange={handleInputChange}/>\r\n                        <Form.Checkbox label='Discontinued' checked={product.Discontinued || false} name='Discontinued' onChange={toggleDiscontinued}/>\r\n                        <FamilySelect setCurrentFamily={setCurrentFamily} currentFamily={currentFamily}/>\r\n                        <Button loading={submiting} positive type='submit'>Submit</Button>\r\n                        <Button onClick={closeForm} type='button'>Cancel</Button>\r\n                    </Form>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import React, { ChangeEvent, MouseEvent, useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { Button, Form, Grid, Header, Input, Label, Message, Segment } from \"semantic-ui-react\";\r\nimport api from \"../app/api\";\r\nimport { Role, User } from \"../models/user\";\r\nimport { UserContext } from \"./UserProvider\";\r\n\r\nexport default function UserForm(){\r\n    const userCtx=React.useContext(UserContext);\r\n    const {userRoles, setUserRoles, roles, setRoles}=userCtx;\r\n    const history = useHistory();\r\n    const {id} = useParams<{id: string}>();\r\n    const initialState={\r\n        Id: '',\r\n        UserName: '',\r\n        Email: '',\r\n        PhoneNumber: '',\r\n        Address: '',\r\n        City: '',\r\n        Token: '',\r\n        Sales: [],\r\n        Photos: [],\r\n        Roles: []\r\n    }\r\n    const [user, setUser]=useState<User>(initialState);\r\n    const [submiting, setSubmiting]=useState(false);\r\n    const [error, setError]=useState(\"\");\r\n    useEffect(()=>{\r\n        if(id){\r\n            api.Users.details(id).then(response => {\r\n                if(response!==null) setUser(response);\r\n            }).catch((err)=>{\r\n                console.log(err);\r\n                setError(err);\r\n            });\r\n        };\r\n    }, [id])\r\n    const newRole={\r\n        Id: '',\r\n        Name: ''\r\n    }\r\n    const [role, setRole]=useState(newRole);\r\n    function handleSubmit(){\r\n        editUser(user);\r\n    }\r\n\r\n    function handleInputChange(event: ChangeEvent<HTMLInputElement>){\r\n        const {name, value}=event.target;\r\n        setUser({...user, [name]: value})\r\n    }\r\n    \r\n    function editUser(user: User){\r\n        setSubmiting(true);\r\n        if (user.Id){\r\n          api.Users.update(user).then(()=>{\r\n            history.push('/');\r\n          })\r\n        } else {\r\n          api.Users.create(user).then(()=>{\r\n            history.push('/');\r\n          })\r\n        }\r\n        setUser(user);\r\n        setSubmiting(false);   \r\n    }\r\n\r\n    function closeForm(){\r\n        history.push('/');\r\n    }\r\n\r\n    function handleAddRole(event: ChangeEvent<HTMLInputElement>){\r\n        const {value}=event.target;\r\n        setRole({Id: '', Name: value});   \r\n    }\r\n\r\n    function createRole(){\r\n        if(role.Id === \"\" && !roles.some(r=>r.Name === role.Name)){\r\n            setSubmiting(true);\r\n            api.Roles.create({Name: role.Name}).then(response => {\r\n                if(response!==null) setRole(response);\r\n            }).catch((err)=>{\r\n                console.log(err);\r\n                setError(err);\r\n            });\r\n            setSubmiting(false);\r\n        } \r\n    }\r\n\r\n    function addRole(event: MouseEvent){\r\n        console.log(event);\r\n        const target=event.target as HTMLButtonElement;\r\n        if(target.value!=='' && !userRoles.some(r=>r.Name === target.value)){\r\n            const roleFromEvent = {Id: target.id, Name: target.value};\r\n            setRole(roleFromEvent);\r\n            setUser({...user, Roles: [...user.Roles, roleFromEvent.Id]});\r\n            api.Roles.addrole(user.Id, roleFromEvent).then(response => {\r\n                if(response!==null) setUser(response);\r\n            }).catch((err)=>{\r\n                console.log(err);\r\n                setError(err);\r\n            });\r\n        }\r\n    }\r\n\r\n    function removeRole(event: MouseEvent){\r\n        console.log(event);\r\n        const target=event.target as HTMLButtonElement;\r\n        if(target.value!=='' && userRoles.some(r=>r.Name === target.value)){\r\n            setRole(newRole);\r\n            setUser({...user, Roles: [...user.Roles.filter(r=>r !== target.id)]});\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <Grid centered columns={2}>\r\n                <Grid.Column>\r\n                    <Header as='h2'>Edit user \"{user.UserName}\"</Header>\r\n                    <Segment.Group>\r\n                    <Form onSubmit={handleSubmit} error={error?true:false}>\r\n                        <Segment>\r\n                            <Form.Input required placeholder='User Name' value={user.UserName || ''} name='UserName' onChange={handleInputChange}/>\r\n                            <Form.Input required placeholder='Email' value={user.Email || ''} name='Email' onChange={handleInputChange}/>\r\n                            <Form.Input placeholder='Phone Number' value={user.PhoneNumber || ''} name='PhoneNumber' onChange={handleInputChange}/>\r\n                            <Form.Input placeholder='Address' value={user.Address || ''} name='Address' onChange={handleInputChange}/>\r\n                            <Form.Input placeholder='City' value={user.City || ''} name='City' onChange={handleInputChange}/>\r\n                        </Segment>\r\n                        <Segment>\r\n                            <Grid>\r\n                                <Grid.Row>\r\n                                    <Grid.Column width={8}>\r\n                                        <Header as='h4'>Roles of \"{user.UserName}\":</Header>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column width={8}>\r\n                                        {userRoles.map(r => (\r\n                                            <Button size='mini' type='button' onClick={removeRole} id={r.Id} value={r.Name} key={r.Id}>{r.Name}</Button>\r\n                                        ))}\r\n                                    </Grid.Column>\r\n                                </Grid.Row>\r\n                                <Grid.Row>\r\n                                    <Grid.Column width={8}>\r\n                                        <Header as='h4'>Available Roles:</Header>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column width={8}>\r\n                                        {roles.map(r => (\r\n                                            <Button size='mini' type='button' onClick={addRole} id={r.Id} value={r.Name} key={r.Id}>{r.Name}</Button>\r\n                                        ))}\r\n                                    </Grid.Column>\r\n                                </Grid.Row>\r\n                                <Grid.Row>\r\n                                    <Grid.Column width={16}>\r\n                                        <Input placeholder='Add Role' name='Role' value={role.Name || ''} onChange={handleAddRole}/>\r\n                                        <Button loading={submiting} onClick={createRole} type='button'>Create role</Button>\r\n                                    </Grid.Column>\r\n                                </Grid.Row>\r\n                            </Grid>\r\n                        </Segment>\r\n                        <Segment>\r\n                            <Button loading={submiting} positive type='submit'>Submit</Button>\r\n                            <Button onClick={closeForm} type='button'>Cancel</Button>\r\n                        </Segment>\r\n                        <Message error content={error.toString()}/>\r\n                    </Form>\r\n                    </Segment.Group>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </>\r\n    );\r\n}","import React, { useState, MouseEvent, useEffect } from \"react\";\r\nimport { Header, Grid, Label, Segment, Button, Card } from \"semantic-ui-react\";\r\nimport api from \"../app/api\";\r\nimport { SalesDetail } from \"../models/salesdetail\";\r\nimport { CartContext } from \"./CartProvider\";\r\n\r\nexport default function CartList(){\r\n    const cartCtx=React.useContext(CartContext);\r\n    const [submiting, setSubmiting]=useState(false);\r\n    const [totalProducts, setTotalProducts]=useState<number>(0);\r\n    const [totalPrice, setTotalPrice]=useState<number>(0);\r\n    useEffect(()=>{\r\n            cartCtx.fillUserSales();\r\n            cartCtx.fillCartProducts();\r\n            cartCtx.fillUserSalesDetails();\r\n            cartCtx.fillActiveSalesDetails();\r\n    }, [])\r\n    useEffect(()=>{\r\n        let price = 0;\r\n        cartCtx.activeSalesDetails.map(d=>{\r\n            price += d.LineTotal;\r\n        });\r\n        setTotalPrice(price);\r\n        setTotalProducts(cartCtx.cartProducts.length);\r\n    }, [cartCtx.activeSalesDetails, cartCtx.cartProducts])\r\n\r\n    function addProduct(event: MouseEvent){\r\n        const target=event.target as HTMLButtonElement;\r\n        const activeSalesDetails = cartCtx.activeSalesDetails;\r\n        const salesDetail = activeSalesDetails.find(d=>d.Product === target.value);\r\n        if(salesDetail !== undefined && salesDetail.UnitPrice !== 0){\r\n            salesDetail.Quantity += 1;\r\n            salesDetail.LineTotal += salesDetail.UnitPrice;\r\n            updateSalesDetail(salesDetail);\r\n            cartCtx.setActiveSalesDetails([...activeSalesDetails.filter(d => d.SalesDetailId !== salesDetail?.SalesDetailId), salesDetail]);\r\n            setSubmiting(false);\r\n        }\r\n    }\r\n\r\n    function removeProduct(event: MouseEvent){\r\n        const target=event.target as HTMLButtonElement;\r\n        const activeSalesDetails = cartCtx.activeSalesDetails;\r\n        const salesDetail = activeSalesDetails.find(d=>d.Product === target.value);\r\n        if(salesDetail !== undefined && salesDetail.UnitPrice !== 0 && salesDetail.Quantity > 0){\r\n            salesDetail.Quantity -= 1;\r\n            salesDetail.LineTotal -= salesDetail.UnitPrice;\r\n            updateSalesDetail(salesDetail);\r\n            cartCtx.setActiveSalesDetails([...activeSalesDetails.filter(d => d.SalesDetailId !== salesDetail?.SalesDetailId), salesDetail]);\r\n            setSubmiting(false);\r\n        }\r\n    }\r\n\r\n    function updateSalesDetail(salesDetail: SalesDetail){\r\n        setSubmiting(true);\r\n        return api.SalesDetails.update(salesDetail)\r\n    }\r\n\r\n    return(\r\n        <>\r\n        {totalProducts>0?\r\n        <>\r\n        <Header as='h1'>Your Cart</Header>\r\n        <Grid >\r\n            <Grid.Column width={10}>\r\n                    {cartCtx.cartProducts.map(product=>{\r\n                        return(\r\n                            <Card key={product.ProductId} fluid>\r\n                                <Card.Content>\r\n                                <Card.Header as='h2'>{product.ProductName}</Card.Header>\r\n                                <Card.Meta>    <p>Barcode: {product.Barcode}</p></Card.Meta>\r\n                                <Card.Description>\r\n                                    <Grid>\r\n                                        <Grid.Column floated='left' width={10}>\r\n                                            <p>Price: {product.UnitPrice}&euro; per {product.QuantityPerUnit} {product.UnitMeasure}</p>\r\n                                        </Grid.Column>\r\n                                        <Grid.Column floated='right' width={6}>\r\n                                            <strong>Total: {cartCtx.activeSalesDetails?.find(d=>d.Product === product.ProductId)?.LineTotal}&euro; </strong>\r\n                                        </Grid.Column>\r\n                                    </Grid>\r\n                                        <Label>{cartCtx.families.find(f=>f.FamilyId === product.FamilyId)?.FamilyName}</Label>\r\n                                        <Button.Group size='large' floated='right'>\r\n                                            <Button loading={submiting} negative onClick={removeProduct} type='button' value={product.ProductId}>-</Button>\r\n                                            <Button >{cartCtx.activeSalesDetails.find(d=>d.Product === product.ProductId)?.Quantity} {product.UnitMeasure}</Button>\r\n                                            <Button loading={submiting} positive onClick={addProduct} type='button' value={product.ProductId}>+</Button>\r\n                                        </Button.Group>\r\n                                </Card.Description>\r\n                                </Card.Content>\r\n                            </Card>\r\n                    )})}\r\n            </Grid.Column>\r\n            <Grid.Column width={6}>\r\n                <Segment>\r\n                    <Header as='h2'>Total:</Header>\r\n                    <p>{totalProducts} units for {totalPrice}&euro;</p>\r\n                </Segment>\r\n            </Grid.Column>\r\n        </Grid>\r\n        </>:\r\n        <Header as='h1'>Your Cart is empty</Header>}\r\n        </>\r\n    );\r\n}","import React, {useEffect, useState} from 'react';\r\nimport { Container } from 'semantic-ui-react';\r\nimport NavBar from './NavBar';\r\nimport Loading from '../components/loading';\r\nimport StoreList from '../components/StoreList';\r\nimport StoreForm from '../components/StoreForm';\r\nimport LoginForm from '../components/LoginForm';\r\nimport { Route } from 'react-router';\r\nimport HomePage from '../components/HomePage';\r\nimport RegisterForm from '../components/RegisterForm';\r\nimport ProductList from '../components/ProductList';\r\nimport ProductForm from '../components/ProductForm';\r\nimport { UserContext } from '../components/UserProvider';\r\nimport UserForm from '../components/UserForm';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CartList from '../components/CartList';\r\nimport { CartContext } from '../components/CartProvider';\r\n\r\nfunction App() {\r\n  const userCtx=React.useContext(UserContext);\r\n  const cartCtx=React.useContext(CartContext);\r\n  const history = useHistory();\r\n  const [loading, setLoading]=useState(true);\r\n\r\n  useEffect(()=>{\r\n    if(userCtx.userToken){\r\n      console.log('the token: ' + userCtx.userToken);\r\n      userCtx.getCurrentUser();\r\n      if(userCtx.user) {\r\n        cartCtx.fillUserSales();\r\n        cartCtx.fillCartProducts();\r\n        cartCtx.fillUserSalesDetails();\r\n        cartCtx.fillActiveSalesDetails();\r\n      }\r\n      setLoading(false);\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [])\r\n\r\n  function handleLogout(){\r\n//    api.Account.logout().then(()=>{\r\n      userCtx.setUser(null);\r\n      window.localStorage.removeItem('jwt');\r\n      console.log('Successfully loged out');\r\n//     })\r\n//    setActiveItem('home');\r\n      history.push('/');\r\n  }\r\n\r\n  if (loading) return <Loading content='Loading App ...'/>\r\n  return (\r\n    <div className=\"App\">\r\n        <NavBar logout={handleLogout}/>\r\n        <Container style={{marginTop:'7em'}}>\r\n          <Route exact path='/' component={HomePage}/>\r\n          <Route path='/store' component={StoreList}/>\r\n          <Route path={['/newstore', '/editstore/:id']} component={StoreForm}/>\r\n          <Route path='/product' component={ProductList}/>\r\n          <Route path={['/newproduct', '/editproduct/:id']} component={ProductForm}/>\r\n          <Route path={['/newuser', '/edituser/:id']} component={UserForm}/>\r\n          <Route path={'/cartlist/:id'} component={CartList}/>\r\n          <Route path='/login' component={LoginForm}/>\r\n          <Route path='/register' component={RegisterForm}/>\r\n        </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport './app/style.css';\r\nimport App from './app/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport UserProvider from './components/UserProvider';\r\nimport CartProvider from './components/CartProvider';\r\n\r\nReactDOM.render(\r\n  <UserProvider>\r\n    <CartProvider>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </CartProvider>\r\n  </UserProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}